-module(join_group_response_tests).

-include_lib("eunit/include/eunit.hrl").

leader_test() ->
    Capture =
        <<0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 5, 114, 97, 110, 103, 101, 0, 44, 114, 100,
            107, 97, 102, 107, 97, 45, 51, 57, 55, 100, 54, 52, 51, 101, 45, 54, 56, 52, 53, 45, 52,
            52, 50, 49, 45, 98, 56, 54, 101, 45, 97, 55, 54, 97, 98, 57, 97, 100, 99, 55, 53, 101,
            0, 44, 114, 100, 107, 97, 102, 107, 97, 45, 51, 57, 55, 100, 54, 52, 51, 101, 45, 54,
            56, 52, 53, 45, 52, 52, 50, 49, 45, 98, 56, 54, 101, 45, 97, 55, 54, 97, 98, 57, 97,
            100, 99, 55, 53, 101, 0, 0, 0, 2, 0, 44, 114, 100, 107, 97, 102, 107, 97, 45, 51, 57,
            55, 100, 54, 52, 51, 101, 45, 54, 56, 52, 53, 45, 52, 52, 50, 49, 45, 98, 56, 54, 101,
            45, 97, 55, 54, 97, 98, 57, 97, 100, 99, 55, 53, 101, 255, 255, 0, 0, 0, 26, 0, 3, 0, 0,
            0, 1, 0, 4, 99, 97, 114, 115, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 44,
            114, 100, 107, 97, 102, 107, 97, 45, 52, 48, 101, 49, 48, 53, 51, 57, 45, 102, 55, 99,
            51, 45, 52, 52, 100, 54, 45, 98, 56, 51, 57, 45, 101, 50, 50, 54, 99, 102, 54, 57, 49,
            102, 57, 52, 255, 255, 0, 0, 0, 26, 0, 3, 0, 0, 0, 1, 0, 4, 99, 97, 114, 115, 0, 0, 0,
            0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0>>,
    ?assertEqual(
        {
            #{
                correlation_id => 5,
                throttle_time_ms => 0,
                error_code => 0,
                member_id => <<"rdkafka-397d643e-6845-4421-b86e-a76ab9adc75e">>,
                generation_id => 68,
                members =>
                    [
                        #{
                            metadata =>
                                <<0, 3, 0, 0, 0, 1, 0, 4, 99, 97, 114, 115, 0, 0, 0, 0, 0, 0, 0, 0,
                                    255, 255, 255, 255, 0, 0>>,
                            member_id => <<"rdkafka-397d643e-6845-4421-b86e-a76ab9adc75e">>,
                            group_instance_id => null
                        },
                        #{
                            metadata =>
                                <<0, 3, 0, 0, 0, 1, 0, 4, 99, 97, 114, 115, 0, 0, 0, 0, 0, 0, 0, 0,
                                    255, 255, 255, 255, 0, 0>>,
                            member_id => <<"rdkafka-40e10539-f7c3-44d6-b839-e226cf691f94">>,
                            group_instance_id => null
                        }
                    ],
                protocol_name => <<"range">>,
                leader => <<"rdkafka-397d643e-6845-4421-b86e-a76ab9adc75e">>
            },
            <<>>
        },
        join_group_response:decode_join_group_response_5(Capture)
    ),
    ok.

follower_test() ->
    Capture =
        <<0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 5, 114, 97, 110, 103, 101, 0, 44, 114, 100,
            107, 97, 102, 107, 97, 45, 51, 57, 55, 100, 54, 52, 51, 101, 45, 54, 56, 52, 53, 45, 52,
            52, 50, 49, 45, 98, 56, 54, 101, 45, 97, 55, 54, 97, 98, 57, 97, 100, 99, 55, 53, 101,
            0, 44, 114, 100, 107, 97, 102, 107, 97, 45, 52, 48, 101, 49, 48, 53, 51, 57, 45, 102,
            55, 99, 51, 45, 52, 52, 100, 54, 45, 98, 56, 51, 57, 45, 101, 50, 50, 54, 99, 102, 54,
            57, 49, 102, 57, 52, 0, 0, 0, 0>>,
    ?assertEqual(
        {
            #{
                correlation_id => 5,
                throttle_time_ms => 0,
                error_code => 0,
                member_id => <<"rdkafka-40e10539-f7c3-44d6-b839-e226cf691f94">>,
                generation_id => 68,
                members => [],
                protocol_name => <<"range">>,
                leader => <<"rdkafka-397d643e-6845-4421-b86e-a76ab9adc75e">>
            },
            <<>>
        },
        join_group_response:decode_join_group_response_5(Capture)
    ),
    ok.

% kafire uses v2
v2_decode_test() ->
    Capture =
        <<0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 10, 114, 111, 117, 110, 100, 114, 111, 98,
            105, 110, 0, 43, 107, 97, 102, 105, 114, 101, 45, 98, 51, 49, 52, 97, 99, 51, 51, 45,
            100, 56, 53, 98, 45, 52, 49, 98, 55, 45, 56, 55, 49, 57, 45, 101, 57, 98, 57, 49, 50,
            51, 52, 57, 101, 56, 51, 0, 43, 107, 97, 102, 105, 114, 101, 45, 98, 51, 49, 52, 97, 99,
            51, 51, 45, 100, 56, 53, 98, 45, 52, 49, 98, 55, 45, 56, 55, 49, 57, 45, 101, 57, 98,
            57, 49, 50, 51, 52, 57, 101, 56, 51, 0, 0, 0, 1, 0, 43, 107, 97, 102, 105, 114, 101, 45,
            98, 51, 49, 52, 97, 99, 51, 51, 45, 100, 56, 53, 98, 45, 52, 49, 98, 55, 45, 56, 55, 49,
            57, 45, 101, 57, 98, 57, 49, 50, 51, 52, 57, 101, 56, 51, 0, 0, 0, 32, 0, 0, 0, 0, 0, 2,
            0, 1, 112, 0, 1, 113, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 114, 111, 117, 110, 100, 114, 111,
            98, 105, 110>>,
    {Decoded, <<>>} = join_group_response:decode_join_group_response_2(Capture),
    ?assertEqual(
        #{
            correlation_id => 1,
            throttle_time_ms => 0,
            error_code => 0,
            member_id => <<"kafire-b314ac33-d85b-41b7-8719-e9b912349e83">>,
            generation_id => 13,
            members => [
                #{
                    metadata =>
                        <<0, 0, 0, 0, 0, 2, 0, 1, 112, 0, 1, 113, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10,
                            114, 111, 117, 110, 100, 114, 111, 98, 105, 110>>,
                    member_id => <<"kafire-b314ac33-d85b-41b7-8719-e9b912349e83">>
                }
            ],
            protocol_name => <<"roundrobin">>,
            leader => <<"kafire-b314ac33-d85b-41b7-8719-e9b912349e83">>
        },
        Decoded
    ),
    #{members := [#{metadata := Metadata}]} = Decoded,
    ?assertEqual(
        #{topics => [<<"p">>, <<"q">>], user_data => <<>>},
        kafcod_consumer_protocol:decode_metadata(Metadata)
    ),
    ok.
